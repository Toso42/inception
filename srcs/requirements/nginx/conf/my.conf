# an nginx config can have the following sections:
#
#  events: It is used to configure global event-related settings for NGINX.
#  http: It contains the main configuration for the HTTP server.
#  server: It represents a server block and defines the configuration for a specific server or virtual host.
#  location: It is used to define how NGINX should handle requests for specific URL patterns or locations.
#  upstream: It is used to define groups of servers that NGINX can proxy requests to.
#

events {
  worker_connections 1024;
}

http {
  keepalive_timeout  65; # how much should the connection last

  server {
    listen 443 ssl; #listening to this port 

    ssl_protocols TLSv1.2 TLSv1.3; #ssl type specification
    ssl_ciphers HIGH:!aNULL:!MD5;

    ssl_certificate /etc/ssl/cert.pem; # paths to certificate and key.
    ssl_certificate_key /etc/ssl/key.pem; # *note that variables are expanded at dockerfile level with envsubst.

    # define the root path on filesystem
    root /var/www/html/;

    # location means litterally on the site filesystem, / being the root.
    location / {
      autoindex on; # enables directory listing
      try_files $uri $uri/ =404; 

      # explicit header request substitutions
      proxy_set_header Host $host ;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    # Forward any php requests to the WordPress+PHP site
	      location ~ \.php$ {
    		fastcgi_split_path_info ^(.+\.php)(/.+)$; # splits path and file request
    		fastcgi_pass wordpress:9000; # define which service and port to forward requests to
    		fastcgi_index index.php; # forces this specific file to be switched by any generic folder request
    		include fastcgi_params; # this is a configuration file which is stated to be explicitly included in this instruction
    		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; # explicit definition of SCRIPT_FILENAME parameter, from joining path and name of the script called
    		fastcgi_param PATH_INFO $fastcgi_path_info; # as above
    	}
  }

#   server {
#     listen 443;
# #    return 301 https://$host$request_uri;

#     location / {
#       try_files $uri $uri/ =404;
#     }

  # }

}
