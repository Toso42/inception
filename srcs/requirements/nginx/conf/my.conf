# an nginx config can have the following sections:
#
#  events: It is used to configure global event-related settings for NGINX.
#  http: It contains the main configuration for the HTTP server.
#  server: It represents a server block and defines the configuration for a specific server or virtual host.
#  location: It is used to define how NGINX should handle requests for specific URL patterns or locations.
#  upstream: It is used to define groups of servers that NGINX can proxy requests to.
#

# server {
# 	server_name	tdi-leo.42.fr;
# }

events {
  worker_connections 1024;
}

http {
	proxy_set_header    	X-Forwarded-Proto https;
#   keepalive_timeout  65; # how much should the connection last

#   server {
# 	server_name	tdi-leo.42.fr;
#     listen 443 ssl; #listening to this port 

#     ssl_protocols TLSv1.2 TLSv1.3; #ssl type specification
#     ssl_ciphers HIGH:!aNULL:!MD5;

#     ssl_certificate /etc/ssl/cert.pem; # paths to certificate and key.
#     ssl_certificate_key /etc/ssl/key.pem; # *note that variables are expanded at dockerfile level with envsubst.

#     # define the root path on filesystem
#     root /var/www/html/;
	
# 	# explicit indexing
# 	index index.php index.html index.htm;
    
# 	# location means litterally on the site filesystem, / being the root.
#     location / {
#     	#autoindex on; # enables directory listing
#       	try_files $uri $uri/ =404; 

#     	# explicit header request substitutions
#     	proxy_set_header Host $host ;
#     	proxy_set_header X-Real-IP $remote_addr;
#     	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 		proxy_set_header X-Forwarded-Proto https;
#     }
#     # Forward any php requests to the WordPress+PHP site
# 	location ~ \.php$ {
#     	fastcgi_split_path_info ^(.+\.php)(/.+)$; # splits path and file request
#     	fastcgi_pass wordpress:9000; # define which service and port to forward requests to
#     	#fastcgi_index index.php; # forces this specific file to be switched by any generic folder request
#     	include fastcgi_params; # this is a configuration file which is stated to be explicitly included in this instruction
#     	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; # explicit definition of SCRIPT_FILENAME parameter, from joining path and name of the script called
#     	fastcgi_param PATH_INFO $fastcgi_path_info; # as above
#     }
#   }

#   server {
#     listen 443;
# #    return 301 https://$host$request_uri;

#     location / {
#       try_files $uri $uri/ =404;
#     }

  # }

# }

# map $http_upgrade $connection_upgrade {
#     default upgrade;
#     '' close;
# }

# upstream grafana {
#     server grafana:3000;
# }

# upstream static_website {
#     server static_website:3000;
# }

server {
	listen 443 ssl;
    listen [::]:443 ssl;

    # ssl_certificate /etc/ssl/pcoletta.42.fr.crt;
    # ssl_certificate_key /etc/ssl/pcoletta.42.fr.key;
    ssl_certificate /etc/ssl/cert.pem; # paths to certificate and key.
    ssl_certificate_key /etc/ssl/key.pem; # *note that variables are expanded at dockerfile level with envsubst.

    ssl_protocols TLSv1.2 TLSv1.3;
    
    index index.php;
    root /var/www/html;

    # location ~ ^/adminer(/.*$|$) {
	# 	fastcgi_index index.php;
	# 	include fastcgi_params;
	# 	fastcgi_pass adminer:9000;
	# 	fastcgi_param SCRIPT_FILENAME /var/www/html/index.php;
	# }
 
    # location /grafana/ {
    #     auth_basic "Restricted Access!";
    #     auth_basic_user_file /etc/nginx/.htpasswd-grafana;
    #     proxy_set_header Authorization "";

    #     rewrite  ^/grafana/(.*)  /$1 break;
    #     proxy_set_header Host $http_host;
    #     proxy_pass http://grafana;
    # }

    # location /grafana/api/live/ {
    #     auth_basic "Restricted Access!";
    #     auth_basic_user_file /etc/nginx/.htpasswd-grafana;
    #     proxy_set_header Authorization "";

    #     rewrite  ^/grafana/(.*)  /$1 break;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection $connection_upgrade;
    #     proxy_set_header Host $http_host;
    #     proxy_pass http://grafana;
    # }
    
    location / {
        rewrite  ^/(.*)  /$1 break;
        proxy_set_header Host $http_host;
#        proxy_pass http:/;
    }

    location ~ [^/]\.php(/|$) { 
        try_files $uri =404;
        fastcgi_pass wordpress:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}
}